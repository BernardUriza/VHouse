apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  labels:
    app: adminer
    component: db-admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
        component: db-admin
    spec:
      containers:
        - name: adminer
          image: adminer:latest
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: ADMINER_DEFAULT_SERVER
              valueFrom:
                configMapKeyRef:
                  name: db-admin-config
                  key: DB_HOST
            - name: ADMINER_PLUGINS
              value: "tables-filter tinymce"
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
  labels:
    app: adminer
    component: db-admin
spec:
  type: ClusterIP
  selector:
    app: adminer
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-admin-config
  labels:
    app: adminer
    component: db-admin
data:
  # Change to your in-cluster database hostname/service name
  # For PostgreSQL: "postgresql" or "postgres"
  # For MySQL: "mysql" or "mariadb"
  # For SQL Server: "mssql"
  # For SQLite in production (not recommended): use file path
  DB_HOST: "postgresql"
---
# Network Policy: Restrict access to admin tools
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: adminer-network-policy
  labels:
    app: adminer
    component: db-admin
spec:
  podSelector:
    matchLabels:
      app: adminer
  policyTypes:
    - Ingress
    - Egress
  # Allow ingress from same namespace (for port-forward)
  ingress:
    - from:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 8080
  # Allow egress to database and DNS
  egress:
    - to: []
      ports:
        - protocol: TCP
          port: 5432  # PostgreSQL
        - protocol: TCP
          port: 3306  # MySQL
        - protocol: TCP
          port: 1433  # SQL Server
        - protocol: UDP
          port: 53    # DNS
        - protocol: TCP
          port: 53    # DNS over TCP