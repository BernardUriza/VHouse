name: ci
on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      packages: write
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build (warnings as errors)
        run: dotnet build --no-restore -warnaserror

      - name: Test with coverage
        run: |
          dotnet test --no-build --collect:"XPlat Code Coverage" --results-directory ./TestResults
          echo "##vso[task.setvariable variable=COVERAGE]$(ls TestResults/*/coverage.cobertura.xml 2>/dev/null || true)"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: TestResults/

      - name: Build container image
        run: |
          docker build -t vhouse:${{ github.sha }} .

      - name: Generate SBOM (syft)
        uses: anchore/sbom-action@v0
        with:
          image: vhouse:${{ github.sha }}
          artifact-name: sbom-spdx.json

      - name: Scan image (trivy)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: vhouse:${{ github.sha }}
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'