@page "/orders"
@rendermode InteractiveServer
@inject OrderService OrderService

<h2>📋 Gestión de Pedidos</h2>

<div class="mb-4">
    <h3>➕ Crear Nuevo Pedido</h3>
    <form>
        <div class="row">
            <div class="col-md-4">
                <label for="priceType" class="form-label">Tipo de Precio</label>
                <select id="priceType" class="form-select" @bind="newOrder.PriceType">
                    <option value="public">Precio Público</option>
                    <option value="retail">Precio Punto de Venta</option>
                    <option value="cost">Precio de Costo</option>
                </select>
            </div>

            <div class="col-md-4">
                <label for="deliveryDate" class="form-label">📅 Fecha de Entrega</label>
                <input id="deliveryDate" type="datetime-local" class="form-control" @bind="newOrder.DeliveryDate" />
            </div>

            <div class="col-md-2">
                <label for="totalAmount" class="form-label">💰 Total</label>
                <input id="totalAmount" type="number" step="0.01" class="form-control" @bind="newOrder.TotalAmount" placeholder="Ej. 500.00" />
            </div>

            <div class="col-md-2 align-self-end">
                <button type="button" class="btn btn-success" @onclick="AddOrder">Guardar Pedido</button>
            </div>
        </div>
    </form>
</div>

<h3>📜 Lista de Pedidos</h3>
@if (orders.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>📅 Fecha</th>
                <th>🏪 Tipo de Precio</th>
                <th>💰 Total</th>
                <th>📦 Fecha de Entrega</th>
                <th>⚙️ Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.OrderId</td>
                    <td>@order.OrderDate.ToString("dd/MM/yyyy")</td>
                    <td>@(order.PriceType == "retail" ? "Punto de Venta" : order.PriceType == "cost" ? "Costo" : "Público")</td>
                    <td>@order.TotalAmount.ToString("C")</td>
                    <td>@order.DeliveryDate.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteOrder(order)">🗑 Eliminar</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No hay pedidos registrados.</p>
}

@code {
    private List<Order> orders = new();
    private Order newOrder = new()
        {
            PriceType = "public",
            DeliveryDate = DateTime.Now,
            TotalAmount = 0
        };

    protected override async Task OnInitializedAsync()
    {
        await LoadOrdersAsync();
    }

    private async Task LoadOrdersAsync()
    {
        orders = await OrderService.GetOrdersAsync();
    }

    private async Task AddOrder()
    {
        if (newOrder.TotalAmount <= 0)
        {
            return;
        }

        await OrderService.SaveOrderAsync(newOrder);
        await LoadOrdersAsync();

        newOrder = new Order { PriceType = "public", DeliveryDate = DateTime.Now, TotalAmount = 0 };
    }

    private async Task DeleteOrder(Order order)
    {
        // await OrderService.DeleteOrderAsync(order.OrderId);
        await LoadOrdersAsync();
    }
}
