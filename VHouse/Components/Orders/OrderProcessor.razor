@using System.Text.Json
@inject ChatbotService ChatbotService
@inject ProductService ProductService

<h3 class="text-primary">Procesar Pedido</h3>

<textarea class="form-control form-control-sm mb-2" @bind="userInput"
          placeholder="Pega aquí la descripción del pedido" rows="3"></textarea>
<button class="btn btn-success btn-sm w-100" @onclick="ProcessOrder">Procesar Pedido</button>

@if (errorMessage != null)
{
    <div class="alert alert-danger mt-2 p-2">@errorMessage</div>
}

@code {
    private string userInput = string.Empty;
    private string? errorMessage = null;
    private List<Product> products = new();

    [Parameter] public EventCallback<List<Product>> OnOrderProcessed { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            products = await ProductService.GetProductsAsync();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al cargar los productos: {ex.Message}";
        }
    }

    private async Task ProcessOrder()
    {
        errorMessage = null;
        try
        {
            if (string.IsNullOrWhiteSpace(userInput))
            {
                errorMessage = "El pedido está vacío. Por favor ingresa un pedido válido.";
                return;
            }

            string catalogJson = JsonSerializer.Serialize(products.Select(p => new { p.ProductId, p.ProductName }));
            var extractedProductIds = await ChatbotService.ExtractProductIdsAsync(catalogJson, userInput);
            userInput = string.Empty;

            if (extractedProductIds == null || !extractedProductIds.Any())
            {
                errorMessage = "No se encontraron productos en el pedido.";
                return;
            }

            var selectedProducts = products.Where(p => extractedProductIds.Contains(p.ProductId)).ToList();
            await OnOrderProcessed.InvokeAsync(selectedProducts);
        }
        catch (Exception ex)
        {
            errorMessage = $"Ocurrió un error al procesar el pedido: {ex.Message}";
        }
    }
}
