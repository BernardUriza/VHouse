@model AlbumDetailViewModel
@{
    ViewData["Title"] = $"Gallery - {Model.Album.Name}";
}

<div class="container-fluid px-4">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index")">Gallery</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Album.Name</li>
                </ol>
            </nav>

            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3 mb-0">üìÅ @Model.Album.Name</h1>
                    @if (!string.IsNullOrEmpty(Model.Album.Description))
                    {
                        <p class="text-muted mb-0">@Model.Album.Description</p>
                    }
                    <small class="text-muted">@Model.TotalPhotos items</small>
                </div>
                <div>
                    <a href="@Url.Action("Upload")" class="btn btn-primary">
                        <i class="fas fa-upload"></i> Upload Files
                    </a>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Gallery
                    </a>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!Model.Photos.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-info text-center">
                    <i class="fas fa-images fa-3x mb-3 text-muted"></i>
                    <h4>No files in this album</h4>
                    <p>Start by uploading photos or documents to @Model.Album.Name.</p>
                    <a href="@Url.Action("Upload")" class="btn btn-primary">Upload Files</a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row g-3 mb-4">
            @foreach (var photo in Model.Photos)
            {
                <div class="col-xl-2 col-lg-3 col-md-4 col-sm-6">
                    <div class="card shadow-sm border-0">
                        <div class="position-relative">
                            @if (photo.ContentType.StartsWith("image/"))
                            {
                                <div class="card-img-top" style="height: 150px; overflow: hidden;">
                                    @{
                                        var displayPath = !string.IsNullOrEmpty(photo.ThumbnailPath) ? photo.ThumbnailPath : photo.FileName;
                                    }
                                    <img src="/@displayPath" alt="@photo.OriginalName"
                                         class="w-100 h-100" style="object-fit: cover; cursor: pointer;"
                                         data-bs-toggle="modal" data-bs-target="#photoModal"
                                         data-photo-src="/@photo.FileName"
                                         data-photo-title="@photo.OriginalName"
                                         data-photo-caption="@photo.Caption" />
                                </div>
                            }
                            else if (photo.ContentType == "application/pdf")
                            {
                                <div class="card-img-top d-flex align-items-center justify-content-center bg-light" style="height: 150px;">
                                    <i class="fas fa-file-pdf fa-3x text-danger"></i>
                                </div>
                            }
                            else
                            {
                                <div class="card-img-top d-flex align-items-center justify-content-center bg-light" style="height: 150px;">
                                    <i class="fas fa-file fa-3x text-muted"></i>
                                </div>
                            }

                            <div class="position-absolute top-0 end-0 m-2">
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-dark btn-opacity-75" type="button" data-bs-toggle="dropdown">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        @if (photo.ContentType.StartsWith("image/"))
                                        {
                                            <li><a class="dropdown-item" href="/@photo.FileName" target="_blank">
                                                <i class="fas fa-external-link-alt"></i> View Full Size
                                            </a></li>
                                        }
                                        else
                                        {
                                            <li><a class="dropdown-item" href="/@photo.FileName" target="_blank">
                                                <i class="fas fa-download"></i> Download
                                            </a></li>
                                        }
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <form asp-action="DeletePhoto" method="post" class="d-inline"
                                                  onsubmit="return confirm('Are you sure you want to delete this file?')">
                                                <input type="hidden" name="id" value="@photo.Id" />
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="dropdown-item text-danger">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="card-body p-2">
                            <h6 class="card-title small mb-1 text-truncate" title="@photo.OriginalName">
                                @photo.OriginalName
                            </h6>
                            @if (!string.IsNullOrEmpty(photo.Caption))
                            {
                                <p class="card-text small text-muted mb-1">@photo.Caption</p>
                            }
                            <small class="text-muted">
                                @photo.UploadedUtc.ToString("MMM dd, yyyy")
                                ‚Ä¢ @((photo.SizeBytes / 1024.0).ToString("F1")) KB
                            </small>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Gallery pagination">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Album", new { slug = Model.Album.Slug, page = Model.CurrentPage - 1 })">
                            <i class="fas fa-chevron-left"></i> Previous
                        </a>
                    </li>

                    @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Album", new { slug = Model.Album.Slug, page = i })">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("Album", new { slug = Model.Album.Slug, page = Model.CurrentPage + 1 })">
                            Next <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                </ul>
            </nav>
        }
    }
</div>

<!-- Photo Modal -->
<div class="modal fade" id="photoModal" tabindex="-1" aria-labelledby="photoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="photoModalLabel">Photo Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" alt="" class="img-fluid" />
                <p id="modalCaption" class="mt-2 text-muted"></p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Photo modal handler
        document.addEventListener('DOMContentLoaded', function() {
            const photoModal = document.getElementById('photoModal');
            if (photoModal) {
                photoModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const photoSrc = button.getAttribute('data-photo-src');
                    const photoTitle = button.getAttribute('data-photo-title');
                    const photoCaption = button.getAttribute('data-photo-caption');

                    const modalImage = photoModal.querySelector('#modalImage');
                    const modalTitle = photoModal.querySelector('#photoModalLabel');
                    const modalCaption = photoModal.querySelector('#modalCaption');

                    modalImage.src = photoSrc;
                    modalImage.alt = photoTitle;
                    modalTitle.textContent = photoTitle;
                    modalCaption.textContent = photoCaption || '';
                });
            }
        });
    </script>
}