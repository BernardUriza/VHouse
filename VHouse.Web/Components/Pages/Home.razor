@* Created by Bernard Orozco - VHouse Home Page with Professional Manual *@
@page "/"
@using VHouse.Web.Components.Shared
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>üìö VHouse - Manual de Usuario</PageTitle>

<div class="embedded-manual-container">
    <div class="manual-sidebar">
        <div class="manual-header">
            <h2>üìö Manual VHouse</h2>
            <p>Sistema de Gesti√≥n Vegana</p>
        </div>
        
        <nav class="manual-nav">
            <ul class="nav-list">
                @foreach (var section in manualSections)
                {
                    <li class="nav-item @(currentFile == section.File ? "active" : "")">
                        <button @onclick="@(() => LoadSection(section.File))" class="nav-link">
                            <span class="nav-icon">@(section.Icon)</span>
                            <span class="nav-title">@(section.Title)</span>
                        </button>
                        @if (section.SubSections?.Count > 0 && (currentFile == section.File || section.SubSections.Any(s => s.File == currentFile)))
                        {
                            <ul class="nav-subsections">
                                @foreach (var sub in section.SubSections)
                                {
                                    <li class="nav-subitem">
                                        <button @onclick="@(() => LoadSection(sub.File))" class="nav-sublink @(currentFile == sub.File ? "active" : "")">
                                            <span class="nav-subicon">@sub.Icon</span>
                                            <span class="nav-subtitle">@sub.Title</span>
                                        </button>
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
        </nav>
    </div>
    
    <div class="manual-content">
        @if (isLoading)
        {
            <div class="loading-state">
                <div class="spinner">üå±</div>
                <p>Cargando manual...</p>
            </div>
        }
        else if (!string.IsNullOrEmpty(markdownContent))
        {
            <MarkdownViewer Content="@markdownContent" IsLoading="@isLoading" />
        }
        else
        {
            <div class="welcome-content">
                <div class="welcome-hero">
                    <h1>üå± Bienvenido al Manual de VHouse</h1>
                    <p class="hero-description">
                        Tu gu√≠a completa para dominar el sistema de gesti√≥n vegana m√°s avanzado.
                        Cada funcionalidad dise√±ada para acelerar tu negocio vegano y salvar m√°s vidas animales.
                    </p>
                </div>
                
                <div class="quick-start-grid">
                    <div class="quick-start-card" @onclick="@(() => LoadSection("introduction"))">
                        <div class="card-icon">üöÄ</div>
                        <h3>Inicio R√°pido</h3>
                        <p>Configura tu tienda vegana en minutos</p>
                    </div>
                    
                    <div class="quick-start-card" @onclick="@(() => LoadSection("pos-system"))">
                        <div class="card-icon">üé´</div>
                        <h3>Sistema POS</h3>
                        <p>Procesa ventas como Mona la Dona</p>
                    </div>
                    
                    <div class="quick-start-card" @onclick="@(() => LoadSection("inventory"))">
                        <div class="card-icon">üì¶</div>
                        <h3>Inventario</h3>
                        <p>Gestiona productos como Sano Market</p>
                    </div>
                    
                    <div class="quick-start-card" @onclick="@(() => LoadSection("clients"))">
                        <div class="card-icon">üë•</div>
                        <h3>Clientes</h3>
                        <p>Administra tu red de distribuci√≥n</p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
.embedded-manual-container {
    display: flex;
    min-height: calc(100vh - 80px);
    background: var(--bg-primary);
    margin: 0;
    padding: 0;
}

.manual-sidebar {
    width: 300px;
    background: var(--card-bg);
    border-right: 1px solid var(--border-color);
    padding: var(--spacing-6);
    overflow-y: auto;
}

.manual-header {
    margin-bottom: var(--spacing-6);
    text-align: center;
}

.manual-header h2 {
    color: var(--primary-green);
    margin-bottom: var(--spacing-2);
    font-size: 1.5rem;
}

.manual-header p {
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
}

.nav-list {
    list-style: none;
    padding: 0;
    margin: 0;
}

.nav-item {
    margin-bottom: var(--spacing-2);
}

.nav-link {
    display: flex;
    align-items: center;
    width: 100%;
    padding: var(--spacing-3);
    background: transparent;
    border: none;
    text-decoration: none;
    color: var(--text-primary);
    border-radius: var(--radius-md);
    transition: all var(--transition-fast);
    cursor: pointer;
    font-size: var(--font-size-base);
    text-align: left;
}

.nav-link:hover, .nav-item.active .nav-link {
    background: var(--primary-green);
    color: white;
}

.nav-icon {
    margin-right: var(--spacing-3);
    font-size: 1.2rem;
}

.nav-title {
    font-weight: 500;
}

.nav-subsections {
    list-style: none;
    padding-left: var(--spacing-6);
    margin-top: var(--spacing-2);
}

.nav-sublink {
    display: flex;
    align-items: center;
    width: 100%;
    padding: var(--spacing-2) var(--spacing-3);
    background: transparent;
    border: none;
    text-decoration: none;
    color: var(--text-secondary);
    border-radius: var(--radius-sm);
    transition: all var(--transition-fast);
    font-size: var(--font-size-sm);
    cursor: pointer;
    text-align: left;
}

.nav-sublink:hover, .nav-sublink.active {
    background: var(--surface-bg);
    color: var(--text-primary);
}

.nav-subicon {
    margin-right: var(--spacing-2);
}

.manual-content {
    flex: 1;
    padding: var(--spacing-6);
    overflow-y: auto;
}

.loading-state {
    text-align: center;
    padding: var(--spacing-8);
}

.spinner {
    font-size: 3rem;
    animation: spin 2s linear infinite;
}

@@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.markdown-content {
    max-width: 800px;
    line-height: 1.7;
}

.markdown-content h1, .markdown-content h2, .markdown-content h3 {
    color: var(--primary-green);
    margin-top: var(--spacing-6);
    margin-bottom: var(--spacing-4);
}

.markdown-content p {
    margin-bottom: var(--spacing-4);
    color: var(--text-primary);
}

.markdown-content ul, .markdown-content ol {
    margin-bottom: var(--spacing-4);
    padding-left: var(--spacing-6);
}

.markdown-content code {
    background: var(--surface-bg);
    padding: var(--spacing-1) var(--spacing-2);
    border-radius: var(--radius-sm);
    font-family: var(--font-mono);
    font-size: var(--font-size-sm);
}

.markdown-content pre {
    background: var(--surface-bg);
    padding: var(--spacing-4);
    border-radius: var(--radius-md);
    overflow-x: auto;
    margin-bottom: var(--spacing-4);
}

.welcome-content {
    max-width: 900px;
}

.welcome-hero {
    text-align: center;
    margin-bottom: var(--spacing-8);
}

.welcome-hero h1 {
    font-size: 2.5rem;
    color: var(--primary-green);
    margin-bottom: var(--spacing-4);
}

.hero-description {
    font-size: 1.1rem;
    color: var(--text-secondary);
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
}

.quick-start-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--spacing-4);
}

.quick-start-card {
    background: var(--card-bg);
    padding: var(--spacing-6);
    border-radius: var(--radius-lg);
    border: 1px solid var(--border-color);
    text-align: center;
    cursor: pointer;
    transition: all var(--transition-fast);
}

.quick-start-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
    border-color: var(--primary-green);
}

.card-icon {
    font-size: 3rem;
    margin-bottom: var(--spacing-3);
}

.quick-start-card h3 {
    color: var(--text-primary);
    margin-bottom: var(--spacing-2);
}

.quick-start-card p {
    color: var(--text-secondary);
    font-size: var(--font-size-sm);
    margin: 0;
}

/* Hide main container padding for full-width manual */
body .container {
    padding: 0 !important;
    max-width: 100% !important;
    margin: 0 !important;
}
</style>

@code {
    private bool isLoading = false;
    private string markdownContent = "";
    private string currentFile = "";
    
    private List<ManualSection> manualSections = new()
    {
        new ManualSection { File = "introduction", Icon = "üöÄ", Title = "Introducci√≥n" },
        new ManualSection { File = "getting-started", Icon = "‚≠ê", Title = "Primeros Pasos" },
        new ManualSection { 
            File = "pos-system", 
            Icon = "üé´", 
            Title = "Sistema POS",
            SubSections = new()
            {
                new ManualSection { File = "pos-basics", Icon = "üìù", Title = "Conceptos B√°sicos" },
                new ManualSection { File = "pos-sales", Icon = "üí∞", Title = "Procesando Ventas" },
                new ManualSection { File = "pos-reports", Icon = "üìä", Title = "Reportes y Analytics" }
            }
        },
        new ManualSection { 
            File = "inventory", 
            Icon = "üì¶", 
            Title = "Inventario",
            SubSections = new()
            {
                new ManualSection { File = "products", Icon = "üå±", Title = "Gesti√≥n de Productos" },
                new ManualSection { File = "suppliers", Icon = "üè¢", Title = "Proveedores" },
                new ManualSection { File = "stock-control", Icon = "üìä", Title = "Control de Stock" }
            }
        },
        new ManualSection { File = "clients", Icon = "üë•", Title = "Gesti√≥n de Clientes" },
        new ManualSection { File = "orders", Icon = "üõí", Title = "Gesti√≥n de Pedidos" },
        new ManualSection { File = "deliveries", Icon = "üöö", Title = "Entregas" },
        new ManualSection { File = "analytics", Icon = "üìà", Title = "Analytics y Reportes" },
        new ManualSection { File = "settings", Icon = "‚öôÔ∏è", Title = "Configuraci√≥n" },
        new ManualSection { File = "troubleshooting", Icon = "üîß", Title = "Resoluci√≥n de Problemas" }
    };
    
    protected override async Task OnInitializedAsync()
    {
        // Load introduction by default
        await LoadSection("introduction");
    }
    
    private async Task LoadSection(string fileName)
    {
        try
        {
            isLoading = true;
            currentFile = fileName;
            StateHasChanged();
            
            // Use NavigationManager to get the base URI
            var baseUri = Navigation.BaseUri;
            var fullUri = new Uri(new Uri(baseUri), $"manual/{fileName}.md");
            
            var response = await Http.GetAsync(fullUri);
            if (response.IsSuccessStatusCode)
            {
                markdownContent = await response.Content.ReadAsStringAsync();
            }
            else
            {
                markdownContent = "# üìÑ Archivo no encontrado\n\nEsta secci√≥n del manual a√∫n no est√° disponible.";
            }
        }
        catch (Exception ex)
        {
            markdownContent = $"# ‚ùå Error al cargar\n\nNo se pudo cargar el archivo del manual: {ex.Message}";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
    
    // Markdown processing is now handled by MarkdownViewer component
    
    public class ManualSection
    {
        public string File { get; set; } = "";
        public string Icon { get; set; } = "";
        public string Title { get; set; } = "";
        public List<ManualSection>? SubSections { get; set; }
    }
}